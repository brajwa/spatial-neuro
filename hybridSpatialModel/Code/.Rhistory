data(swedishpines)
#### loading required libraries (there might be more libraries loaded than required)
load.lib = c("this.path", "spatstat", "ggplot2", "tidyverse", "cowplot")
install.lib = load.lib[!load.lib %in% installed.packages()]
for(lib in install.lib) install.packages(lib, dependencies=TRUE)
sapply(load.lib, require, character=TRUE)
data(swedishpines)
plot(swedishpines)
View(swedishpines)
summary(swedishpines)
l = Linhom(swedishpines)
View(l)
plot(l, r~.-r)
plot(l, .-r~r)
min(l$r)
max(l$r)
range_R = data.frame(r=seq(0, 24, by=1))
View(range_R)
p = profilepl(s=range_R, f=AreaInter, axon_pp~polynom(x,y,2), aic=TRUE)
range_R = data.frame(r=seq(1, 24, by=1))
p = profilepl(s=range_R, f=AreaInter, axon_pp~polynom(x,y,2), aic=TRUE)
p = profilepl(s=range_R, f=AreaInter, swedishpines~polynom(x,y,2), aic=TRUE)
p = profilepl(s=range_R, f=AreaInter, swedishpines~polynom(x,y,2), aic=TRUE, rbord = 1)
p
View(p)
p = profilepl(s=range_R, f=AreaInter, swedishpines~polynom(x,y,2), aic=TRUE, rbord = 2)
p
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(21))
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(4))
fitSA
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(10))
fitSA
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(1))
fitSA
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(6))
fitSA
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(15))
fitSA
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(12))
fitSA
fitSA <- ppm(swedishpines ~ polynom(x,y,2), AreaInter(21))
fitSA
p = profilepl(s=range_R, f=AreaInter, swedishpines~x+y, aic=TRUE, rbord = 1)
p
for(lib in install.lib) install.packages(lib, dependencies=TRUE)
#### loading required libraries (there might be more libraries loaded than required)
load.lib = c("this.path", "spatstat", "ggplot2", "tidyverse", "cowplot")
install.lib = load.lib[!load.lib %in% installed.packages()]
for(lib in install.lib) install.packages(lib, dependencies=TRUE)
sapply(load.lib, require, character=TRUE)
#### extracting parent directory information for accessing input and output location
dir = this.dir()
folder = strsplit(dir, "/")
folder = folder[[1]][length(folder[[1]])]
parent = strsplit(dir, folder)
#### input location
folder_path = paste(parent, "Data/Peripheral Axon/Inputs/", sep = "")
data_files = list.files(path=folder_path, pattern = ".csv", full.names = FALSE)
extension = ".csv"
pp_list = list()
for (file_name in data_files) {
file_name = strsplit(file_name, ".csv")[[1]]
print(file_name)
axon_locations = unique(read.csv(paste(folder_path, file_name, extension, sep="")))
retrieved_contour = readRDS(paste(folder_path, file_name, ".rds", sep=""))
axon_pp = ppp(x=axon_locations$X, y=axon_locations$Y, checkdup=F, window = retrieved_contour)
axon_pp = rescale.ppp(axon_pp, s=320153.4)  #pre-computed maximum y-range of all the fascicles (ScalingFactorComputation.R)
axon_pp = shift.ppp(axon_pp, origin = "centroid")
pp_list[[length(pp_list) + 1]] = axon_pp
}
#### investigate the pelvic samples
pelvic_pp = pp_list[c(19:29)]
max_inhom_l_r = c()
for(axon_pp in pelvic_pp){
summary(axon_pp)
plot(axon_pp, pch=19, cex=0.3, bg="black")
inhom_l = Linhom(axon_pp, correction = "border")
max_inhom_l_r[length(max_inhom_l_r) + 1] = max(inhom_l$r)
ggobj = ggplot(data = inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=inhom_l$r, y=inhom_l$border-inhom_l$r), linewidth=1) +
geom_vline(xintercept = min(nndist(axon_pp)), linewidth=1, lty=2, colour="blue") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
}
limit_r = min(max_inhom_l_r)
axon_pp = pelvic_pp[[1]]
plot(axon_pp, pch=19, cex=0.3, bg="black")
inhom_l = Linhom(axon_pp, correction = "border")
max_inhom_l_r[length(max_inhom_l_r) + 1] = max(inhom_l$r)
ggobj = ggplot(data = inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=inhom_l$r, y=inhom_l$border-inhom_l$r), linewidth=1) +
geom_vline(xintercept = min(nndist(axon_pp)), linewidth=1, lty=2, colour="blue") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
init_r = min(nndist(axon_pp))
####figuring out R
range_R = data.frame(r=seq(init_r, limit_r, by=0.001))
p = profilepl(s=range_R, f=AreaInter, axon_pp~polynom(x, y, 2), aic=TRUE, rbord = init_r)
p
init_r
fitSA <- ppm(axon_pp ~ polynom(x,y,2), AreaInter(0.0035))
fitSA
sim_1 = simulate(fitSA)
View(sim_1)
summary(sim_1)
plot(sim_1$`Simulation 1`, pch=19, cex=0.3, bg="black")
sim_inhom_l = Linhom(sim_1, correction = "border")
sim_inhom_l = Linhom(sim_1$`Simulation 1`, correction = "border")
ggobj = ggplot(data = sim_inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=sim_inhom_l$r, y=sim_inhom_l$border-sim_inhom_l$r), linewidth=1) +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
plot(axon_pp, pch=19, cex=0.3, bg="black")
inhom_l = Linhom(axon_pp, correction = "border")
max_inhom_l_r[length(max_inhom_l_r) + 1] = max(inhom_l$r)
ggobj = ggplot(data = inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=inhom_l$r, y=inhom_l$border-inhom_l$r), linewidth=1) +
geom_vline(xintercept = min(nndist(axon_pp)), linewidth=1, lty=2, colour="blue") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
hbd = Hybrid(AreaInter(0.0035), Hardcore(0.00048))
fitSA <- ppm(axon_pp ~ polynom(x,y,2), hbd)
fitSA
sim_1 = simulate(fitSA)
plot(sim_1$`Simulation 1`, pch=19, cex=0.3, bg="black")
sim_inhom_l = Linhom(sim_1$`Simulation 1`, correction = "border")
ggobj = ggplot(data = sim_inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=sim_inhom_l$r, y=sim_inhom_l$border-sim_inhom_l$r), linewidth=1) +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
View(sim_1)
hbd_2 = Hybrid(AreaInter(0.0035), StraussHard(r=0.0015, hc=0.00048))
fitSA <- ppm(axon_pp ~ polynom(x,y,2), hbd_2)
fitSA
sim_2 = simulate(fitSA)
plot(sim_2$`Simulation 1`, pch=19, cex=0.3, bg="black")
sim_2_inhom_l = Linhom(sim_2$`Simulation 1`, correction = "border")
ggobj = ggplot(data = sim_2_inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=sim_inhom_l$r, y=sim_inhom_l$border-sim_inhom_l$r), linewidth=1) +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
ggobj = ggplot(data = sim_2_inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=sim_2_inhom_l$r, y=sim_2_inhom_l$border-sim_2_inhom_l$r), linewidth=1) +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
sim_2 = simulate(fitSA)
plot(sim_2$`Simulation 1`, pch=19, cex=0.3, bg="black")
sim_2_inhom_l = Linhom(sim_2$`Simulation 1`, correction = "border")
ggobj = ggplot(data = sim_2_inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=sim_2_inhom_l$r, y=sim_2_inhom_l$border-sim_2_inhom_l$r), linewidth=1) +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
plot(d)
View(inhom_l)
View(p)
e^3.06
exp(3.06)
axon_pp=pelvic_pp[[2]]
summary(axon_pp)
plot(axon_pp, pch=19, cex=0.3, bg="black")
inhom_l = Linhom(axon_pp, correction = "border")
ggobj = ggplot(data = inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=inhom_l$r, y=inhom_l$border-inhom_l$r), linewidth=1) +
geom_vline(xintercept = min(nndist(axon_pp)), linewidth=1, lty=2, colour="blue") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
limit_r
range_R = data.frame(r=seq(init_r, limit_r, by=0.001))
p = profilepl(s=range_R, f=AreaInter, axon_pp~polynom(x, y, 2), aic=TRUE, rbord = init_r)
p
hbd = Hybrid(AreaInter(0.0185), Hardcore(min(nndist(axon_pp))))
fitSA <- ppm(axon_pp ~ polynom(x,y,2), hbd)
fitSA
hbd = Hybrid(AreaInter(0.006), Hardcore(min(nndist(axon_pp))))
fitSA <- ppm(axon_pp ~ polynom(x,y,2), hbd)
fitSA
sim_2 = simulate(fitSA)
plot(sim_2$`Simulation 1`, pch=19, cex=0.3, bg="black")
sim_2_inhom_l = Linhom(sim_2$`Simulation 1`, correction = "border")
ggobj = ggplot(data = sim_2_inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=sim_2_inhom_l$r, y=sim_2_inhom_l$border-sim_2_inhom_l$r), linewidth=1) +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
plot(fitin(fitSA))
axon_pp=pelvic_pp[[11]]
summary(axon_pp)
plot(axon_pp, pch=19, cex=0.3, bg="black")
inhom_l = Linhom(axon_pp, correction = "border")
ggobj = ggplot(data = inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=inhom_l$r, y=inhom_l$border-inhom_l$r), linewidth=1) +
geom_vline(xintercept = min(nndist(axon_pp)), linewidth=1, lty=2, colour="blue") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
init_r = min(nndist(axon_pp))
init_r
limit_r
range_R = data.frame(r=seq(init_r, limit_r, by=0.001))
p = profilepl(s=range_R, f=AreaInter, axon_pp~polynom(x, y, 2), aic=TRUE, rbord = init_r)
axon_pp=pelvic_pp[[3]]
summary(axon_pp)
plot(axon_pp, pch=19, cex=0.3, bg="black")
axon_pp=pelvic_pp[[2]]
summary(axon_pp)
plot(axon_pp, pch=19, cex=0.3, bg="black")
axon_pp=pelvic_pp[[4]
]
summary(axon_pp)
plot(axon_pp, pch=19, cex=0.3, bg="black")
axon_pp=pelvic_pp[[10]]
summary(axon_pp)
plot(axon_pp, pch=19, cex=0.3, bg="black")
inhom_l = Linhom(axon_pp, correction = "border")
ggobj = ggplot(data = inhom_l) +
geom_hline(aes(yintercept=0)) + geom_vline(aes(xintercept=0)) +
geom_line(aes(x=inhom_l$r, y=inhom_l$border-inhom_l$r), linewidth=1) +
geom_vline(xintercept = min(nndist(axon_pp)), linewidth=1, lty=2, colour="blue") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
#legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
xlab(expression(paste("Distance, r (", mu, "m scaled)"))) + ylab("Besag's centered L-function")
plot(ggobj)
init_r = min(nndist(axon_pp))
init_r
range_R = data.frame(r=seq(init_r, limit_r, by=0.001))
p = profilepl(s=range_R, f=AreaInter, axon_pp~polynom(x, y, 2), aic=TRUE, rbord = init_r)
