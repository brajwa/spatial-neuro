g = ggplot(edge_features_combined, aes(x = ens_location, y = branch.all.euclid, fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=11), legend.title = element_blank(),
legend.key.height = unit(0.5, 'cm'), legend.key.width = unit(0.5, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=12),
plot.subtitle = element_text(hjust = 0.5, size=11),
axis.text.x = element_text(size = 11), axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 11), axis.title.y = element_text(size = 11),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Edge length")+
labs(title = "Network features at different ENS location")    # the titles needs changing for different runs
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 4.3, height = 3.3)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_features_combined, aes(x = ens_location, y = log(branch.all.euclid), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=11), legend.title = element_blank(),
legend.key.height = unit(0.5, 'cm'), legend.key.width = unit(0.5, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=12),
plot.subtitle = element_text(hjust = 0.5, size=11),
axis.text.x = element_text(size = 11), axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 11), axis.title.y = element_text(size = 11),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Edge length)")+
labs(title = "Network features at different ENS location")    # the titles needs changing for different runs
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 4.3, height = 3.3)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
sample_id = c("prox-sub-CYM1-4-sam-1-4-3", "mid-sub-CYM1-4-sam-1-4-2", "dist-sub-CYM1-4-sam-1-4-1")
edge_feature = edge_features_combined[edge_features_combined$sample_id %in% sample_id, ]
View(edge_feature)
g = ggplot(edge_feature, aes(x = ens_location, y = log(branch.all.euclid), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=11), legend.title = element_blank(),
legend.key.height = unit(0.5, 'cm'), legend.key.width = unit(0.5, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=12),
plot.subtitle = element_text(hjust = 0.5, size=11),
axis.text.x = element_text(size = 11), axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 11), axis.title.y = element_text(size = 11),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Edge length)")+
labs(title = "Network features at different ENS location")    # the titles needs changing for different runs
plot(g)
g = ggplot(edge_feature, aes(x = ens_location, y = log(branch.all.euclid), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=11), legend.title = element_blank(),
legend.key.height = unit(0.5, 'cm'), legend.key.width = unit(0.5, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=12),
plot.subtitle = element_text(hjust = 0.5, size=11),
axis.text.x = element_text(size = 11), axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 11), axis.title.y = element_text(size = 11),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Edge length)")+
labs(title = "Network features at different ENS location")    # the titles needs changing for different runs
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 4.3, height = 3.3)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 4.3, height = 3)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_feature, aes(x = ens_location, y = log(branch.all.euclid), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=11), legend.title = element_blank(),
legend.key.height = unit(0.5, 'cm'), legend.key.width = unit(0.5, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=12),
plot.subtitle = element_text(hjust = 0.5, size=11),
axis.text.x = element_text(size = 11), axis.text.y = element_text(size = 11),
axis.title.x = element_text(size = 11), axis.title.y = element_text(size = 11),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Edge length)")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 3, height = 3)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_feature, aes(x = ens_location, y = log(branch.all.euclid), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Edge length)")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 1.85, height = 1.35)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 2, height = 1.5)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 3, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_feature, aes(x = ens_location, y = branch.all.angle, fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Edge angle")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_angle.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(face_feature, aes(x = ens_location, y = Orient., fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.2, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Face orientation")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/orient.svg", sep=""), width = width = 2.5, height = 2)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/orient.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_feature, aes(x = ens_location, y = branch.all.angle, fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Edge angle")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_angle.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_feature, aes(x = ens_location, y = log(branch.all.euclid), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Edge length)")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(face_feature, aes(x = ens_location, y = Orient., fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Face orientation")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/orient.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(face_feature, aes(x = ens_location, y = log(Area_SL), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Face area)")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/area.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
# #### face area
# all_face_area_distal = unlist(combined_f_a_l[c(1:11)])
# all_face_area_middle = unlist(combined_f_a_l[c(12:20)])
# all_face_area_proximal = unlist(combined_f_a_l[c(21:35)])
#
#
# ens_location = c(rep("distal", length(all_face_area_distal)),
#                  rep("middle", length(all_face_area_middle)),
#                  rep("proximal", length(all_face_area_proximal)))
#
# all_face_area = data.frame(FaceArea=c(all_face_area_distal, all_face_area_middle, all_face_area_proximal),
#                            ENSLocation= ens_location)
#
# ggplot(all_face_area, aes(x = ENSLocation, y = FaceArea, fill = ENSLocation)) +
#     geom_boxplot(notch=TRUE, outlier.size = 1) +
#     #geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ENSLocation)) +
#
#     scale_fill_brewer(palette="Set3") +
#     theme(legend.position="top", legend.text=element_text(size=16), legend.title = element_blank(),
#           legend.box.margin=margin(-10,-10,-10,-10),
#           plot.title = element_text(hjust = 0.5, size=18),
#           plot.subtitle = element_text(hjust = 0.5, size=16),
#           axis.text.x = element_text(size = 16), axis.text.y = element_text(size = 16),
#           axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16),
#           panel.background = element_rect(fill='white', colour='black'),
#           panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
#
#     xlab(expression(paste("ENS location"))) + ylab("Face area of the network")+
#
#     labs(title = "Statistical comparison of face area from different part of ENS")    # the titles needs changing for different runs
g = ggplot(face_feature, aes(x = ens_location, y = log(Elong.), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("log(Face elongation)")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/elong.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
# #### face area
# all_face_area_distal = unlist(combined_f_a_l[c(1:11)])
# all_face_area_middle = unlist(combined_f_a_l[c(12:20)])
# all_face_area_proximal = unlist(combined_f_a_l[c(21:35)])
#
#
# ens_location = c(rep("distal", length(all_face_area_distal)),
#                  rep("middle", length(all_face_area_middle)),
#                  rep("proximal", length(all_face_area_proximal)))
#
# all_face_area = data.frame(FaceArea=c(all_face_area_distal, all_face_area_middle, all_face_area_proximal),
#                            ENSLocation= ens_location)
#
# ggplot(all_face_area, aes(x = ENSLocation, y = FaceArea, fill = ENSLocation)) +
#     geom_boxplot(notch=TRUE, outlier.size = 1) +
#     #geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ENSLocation)) +
#
#     scale_fill_brewer(palette="Set3") +
#     theme(legend.position="top", legend.text=element_text(size=16), legend.title = element_blank(),
#           legend.box.margin=margin(-10,-10,-10,-10),
#           plot.title = element_text(hjust = 0.5, size=18),
#           plot.subtitle = element_text(hjust = 0.5, size=16),
#           axis.text.x = element_text(size = 16), axis.text.y = element_text(size = 16),
#           axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16),
#           panel.background = element_rect(fill='white', colour='black'),
#           panel.grid.major = element_line(color = "grey", linewidth=0.25, linetype=2)) +
#
#     xlab(expression(paste("ENS location"))) + ylab("Face area of the network")+
#
#     labs(title = "Statistical comparison of face area from different part of ENS")    # the titles needs changing for different runs
g = ggplot(face_feature, aes(x = ens_location, y = (Elong.), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Face elongation")
plot(g)
g = ggplot(face_feature, aes(x = ens_location, y = (Area_SL), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Face elongation")
plot(g)
g = ggplot(face_feature, aes(x = ens_location, y = (Area_SL), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Face area")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/area.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(face_feature, aes(x = ens_location, y = (Elong.), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Face elongation")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/elong.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(face_feature, aes(x = ens_location, y = (Orient.), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Face orientation")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/orient.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_feature, aes(x = ens_location, y = (branch.all.euclid), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Edge length")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_len.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
g = ggplot(edge_feature, aes(x = ens_location, y = (branch.all.angle), fill = ens_location)) +
#geom_boxplot(notch=TRUE, outlier.size = 1) +
#geom_quasirandom(cex=0.5, shape = 21, colour = "grey40", aes(fill=ens_location)) +
geom_violinhalf(alpha=0.5, linewidth=0.2, outlier.size = 0.08) +
coord_flip() +
geom_boxplot(notch=TRUE, outlier.size = 0.08, width=0.1, linewidth=0.2) +
scale_fill_brewer(palette="Accent") +
theme(legend.position="top", legend.text=element_text(size=8), legend.title = element_blank(),
legend.key.height = unit(0.3, 'cm'), legend.key.width = unit(0.3, 'cm'),
legend.box.margin=margin(-10,-10,-10,-10),
plot.title = element_text(hjust = 0.5, size=10),
plot.subtitle = element_text(hjust = 0.5, size=8),
axis.text.x = element_text(size = 7.5), axis.text.y = element_text(size = 7.5),
axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8),
panel.background = element_rect(fill='white', colour='black'),
panel.grid.major = element_line(color = "grey", linewidth=0.2, linetype=2)) +
xlab(expression(paste("ENS location"))) + ylab("Edge angle")
plot(g)
svglite(paste("D:/Fall 2023/Research/Prelim/figures/feat_comp/edge_angle.svg", sep=""), width = 2.5, height = 2)
par(mar=c(0,0,0,0))
plot(g)
dev.off()
