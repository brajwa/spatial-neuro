strain_serovar_map$set("SAL081", "Manhattan")
strain_serovar_map$set("SAL109", "Mbandaka")
strain_serovar_map$set("SAL078", "Schwartzengrund")
strain_serovar_map$set("SAL065", "Uganda")
return(strain_serovar_map)
}
constructColumnHeader <- function(){
col_head = c()
# Haralick Texture - 13 (column 1-13)
for (c in c(1:13)) {
col_head = c(col_head, paste("HT", c, sep = "_"))
}
# PseudoZernike - 230 (column 14-243)
for (c in c(1:230)) {
col_head = c(col_head, paste("PZ", c, sep = "_"))
}
# Experimental (spatial fourier transform) - 257 (column 244-500)
for (c in c(1:257)) {
col_head = c(col_head, paste("SFT", c, sep = "_"))
}
# Max frequency - 256 (column 501-756)
for (c in c(1:256)) {
col_head = c(col_head, paste("MF", c, sep = "_"))
}
# Radial distribution - 362 (column 757-1118)
for (c in c(1:362)) {
col_head = c(col_head, paste("RD", c, sep = "_"))
}
col_head = c(col_head, c("Day", "Serovar", "Strain"))
return(col_head)
}
mapFeatureName <- function(){
feature_name_map = dict()
feature_name_map$set("HT", "Haralick Texture")
feature_name_map$set("PZ", "PseudoZernike")
feature_name_map$set("SFT", "Spatial Fourier Transform")
feature_name_map$set("MF", "Max Frequency")
feature_name_map$set("RD", "Radial Distribution")
return(feature_name_map)
}
#### main
strain_serovar_map = mapStrainToSerovar()
data_folder_path = "C:/Users/sanja/Documents/GitHub/Salmonella/Data/SingleStrain_22Serovar"
data_folder_name = tail(unlist(strsplit(data_folder_path, "/")), 1)
#### iterate over the days
day_folder_names = list.dirs(data_folder_path, recursive=FALSE)
for(day_folder in day_folder_names){
day = tail(unlist(strsplit(day_folder, "/")), 1)
cat("Day: ", day, "\n")
#### iterate over each strain in a day
strain_file_names = list.files(day_folder, full.names = TRUE)
for (strain_file in strain_file_names) {
strain = unlist(strsplit(tail(unlist(strsplit(strain_file, "/")), 1), "\\."))[1]
serovar = strain_serovar_map$get(strain)
cat("Strain: ", strain, ", Serovar: ", serovar, "\n")
}
}
col_name = constructColumnHeader()
salmonella_features = data.frame()
col_name
View(salmonella_features)
cat("Day: ", day, "\n")
cat("Strain: ", strain, ", Serovar: ", serovar, "\n")
strain_obv = read.csv(strain_file)
View(strain_obv)
strain_obv = read.csv(strain_file, header = FALSE)
View(strain_obv)
length(strain_obv)
length(strain_obv[, 1])
obv_count = length(strain_obv[, 1])
strain_obv = cbind(strain_obv, rep(day, obv_count), rep(serovar, obv_count), rep(strain, obv_count))
View(strain_obv)
ss_salmonella_features = data.frame()
ss_salmonella_features = rbind(salmonella_features, strain_obv)
colnames(ss_salmonella_features) = col_name
View(ss_salmonella_features)
#### loading required libraries (there might be more libraries loaded than required)
load_lib = c("deldir", "spatstat", "magrittr", "dplyr", "igraph", "scales", "httr", "tidyverse", "ggnetwork", "ggplot2", "poweRlaw",
"imager", "viridis", "plotrix", "openxlsx", "tidyr", "spdep", "maptools", "tmap", "OpenImageR", "dismo", "lctools",
"officer", "rvg", "truncnorm", "emdist", "ks", "rlist", "readxl", "OneR", "MASS", "RColorBrewer", "this.path",
"causaloptim", "RBGL", "svglite", "ggrepel", "devtools", "geosphere", "collections")
install_lib = load_lib[!load_lib %in% installed.packages()]
for(lib in install_lib) install.packages(lib, dependencies=TRUE)
sapply(load_lib, require, character=TRUE)
mapStrainToSerovar <- function(){
strain_serovar_map = dict()
strain_serovar_map$set("SAL015", "Enteritidis")$set("SAL019", "Enteritidis")$set("SAL026", "Enteritidis")
strain_serovar_map$set("SAL001", "Typhimurium")$set("SAL010", "Typhimurium")$set("SAL031", "Typhimurium")
strain_serovar_map$set("SAL014", "Newport")$set("SAL016", "Newport")$set("SAL103", "Newport")
strain_serovar_map$set("SAL008", "Heidelberg")$set("SAL017", "Heidelberg")$set("SAL142", "Heidelberg")
strain_serovar_map$set("SAL033", "Montevideo")$set("SAL055", "Montevideo")$set("SAL112", "Montevideo")
strain_serovar_map$set("SAL009", "SaintPaul")$set("SAL028", "SaintPaul")
strain_serovar_map$set("SAL007", "Muenchen")$set("SAL043", "Muenchen")$set("SAL058", "Muenchen")
strain_serovar_map$set("SAL170", "Braenderup")$set("SAL176", "Braenderup")
strain_serovar_map$set("SAL002", "Infantis")$set("SAL060", "Infantis")$set("SAL138", "Infantis")
strain_serovar_map$set("SAL025", "Thompson")$set("SAL030", "Thompson")$set("SAL072", "Thompson")
strain_serovar_map$set("SAL049", "Agona")$set("SAL113", "Agona")$set("SAL144", "Agona")
strain_serovar_map$set("SAL021", "Hadar")$set("SAL125", "Hadar")
strain_serovar_map$set("SAL006", "Anatum")
strain_serovar_map$set("SAL064", "Berta")
strain_serovar_map$set("SAL066", "Brandenburg")
strain_serovar_map$set("SAL003", "Kentucky")
strain_serovar_map$set("SAL053", "B:i:-")
strain_serovar_map$set("SAL050", "Dublin")
strain_serovar_map$set("SAL081", "Manhattan")
strain_serovar_map$set("SAL109", "Mbandaka")
strain_serovar_map$set("SAL078", "Schwartzengrund")
strain_serovar_map$set("SAL065", "Uganda")
return(strain_serovar_map)
}
constructColumnHeader <- function(){
col_head = c()
# Haralick Texture - 13 (column 1-13)
for (c in c(1:13)) {
col_head = c(col_head, paste("HT", c, sep = "_"))
}
# PseudoZernike - 230 (column 14-243)
for (c in c(1:230)) {
col_head = c(col_head, paste("PZ", c, sep = "_"))
}
# Experimental (spatial fourier transform) - 257 (column 244-500)
for (c in c(1:257)) {
col_head = c(col_head, paste("SFT", c, sep = "_"))
}
# Max frequency - 256 (column 501-756)
for (c in c(1:256)) {
col_head = c(col_head, paste("MF", c, sep = "_"))
}
# Radial distribution - 362 (column 757-1118)
for (c in c(1:362)) {
col_head = c(col_head, paste("RD", c, sep = "_"))
}
col_head = c(col_head, c("Day", "Serovar", "Strain"))
return(col_head)
}
mapFeatureName <- function(){
feature_name_map = dict()
feature_name_map$set("HT", "Haralick Texture")
feature_name_map$set("PZ", "PseudoZernike")
feature_name_map$set("SFT", "Spatial Fourier Transform")
feature_name_map$set("MF", "Max Frequency")
feature_name_map$set("RD", "Radial Distribution")
return(feature_name_map)
}
#### main
strain_serovar_map = mapStrainToSerovar()
col_name = constructColumnHeader()
ss_salmonella_features = data.frame()
data_folder_path = "C:/Users/sanja/Documents/GitHub/Salmonella/Data/SingleStrain_22Serovar"
data_folder_name = tail(unlist(strsplit(data_folder_path, "/")), 1)
#### iterate over the days
day_folder_names = list.dirs(data_folder_path, recursive=FALSE)
for(day_folder in day_folder_names){
day = tail(unlist(strsplit(day_folder, "/")), 1)
cat("Day: ", day, "\n")
#### iterate over each strain in a day
strain_file_names = list.files(day_folder, full.names = TRUE)
for (strain_file in strain_file_names) {
strain = unlist(strsplit(tail(unlist(strsplit(strain_file, "/")), 1), "\\."))[1]
serovar = strain_serovar_map$get(strain)
cat("Strain: ", strain, ", Serovar: ", serovar, "\n")
#### read the strain file
strain_obv = read.csv(strain_file, header = FALSE)
obv_count = length(strain_obv[, 1])
strain_obv = cbind(strain_obv, rep(day, obv_count), rep(serovar, obv_count), rep(strain, obv_count))
#### combine with the feature object
ss_salmonella_features = rbind(salmonella_features, strain_obv)
}
}
#### loading required libraries (there might be more libraries loaded than required)
load_lib = c("deldir", "spatstat", "magrittr", "dplyr", "igraph", "scales", "httr", "tidyverse", "ggnetwork", "ggplot2", "poweRlaw",
"imager", "viridis", "plotrix", "openxlsx", "tidyr", "spdep", "maptools", "tmap", "OpenImageR", "dismo", "lctools",
"officer", "rvg", "truncnorm", "emdist", "ks", "rlist", "readxl", "OneR", "MASS", "RColorBrewer", "this.path",
"causaloptim", "RBGL", "svglite", "ggrepel", "devtools", "geosphere", "collections")
install_lib = load_lib[!load_lib %in% installed.packages()]
for(lib in install_lib) install.packages(lib, dependencies=TRUE)
sapply(load_lib, require, character=TRUE)
mapStrainToSerovar <- function(){
strain_serovar_map = dict()
strain_serovar_map$set("SAL015", "Enteritidis")$set("SAL019", "Enteritidis")$set("SAL026", "Enteritidis")
strain_serovar_map$set("SAL001", "Typhimurium")$set("SAL010", "Typhimurium")$set("SAL031", "Typhimurium")
strain_serovar_map$set("SAL014", "Newport")$set("SAL016", "Newport")$set("SAL103", "Newport")
strain_serovar_map$set("SAL008", "Heidelberg")$set("SAL017", "Heidelberg")$set("SAL142", "Heidelberg")
strain_serovar_map$set("SAL033", "Montevideo")$set("SAL055", "Montevideo")$set("SAL112", "Montevideo")
strain_serovar_map$set("SAL009", "SaintPaul")$set("SAL028", "SaintPaul")
strain_serovar_map$set("SAL007", "Muenchen")$set("SAL043", "Muenchen")$set("SAL058", "Muenchen")
strain_serovar_map$set("SAL170", "Braenderup")$set("SAL176", "Braenderup")
strain_serovar_map$set("SAL002", "Infantis")$set("SAL060", "Infantis")$set("SAL138", "Infantis")
strain_serovar_map$set("SAL025", "Thompson")$set("SAL030", "Thompson")$set("SAL072", "Thompson")
strain_serovar_map$set("SAL049", "Agona")$set("SAL113", "Agona")$set("SAL144", "Agona")
strain_serovar_map$set("SAL021", "Hadar")$set("SAL125", "Hadar")
strain_serovar_map$set("SAL006", "Anatum")
strain_serovar_map$set("SAL064", "Berta")
strain_serovar_map$set("SAL066", "Brandenburg")
strain_serovar_map$set("SAL003", "Kentucky")
strain_serovar_map$set("SAL053", "B:i:-")
strain_serovar_map$set("SAL050", "Dublin")
strain_serovar_map$set("SAL081", "Manhattan")
strain_serovar_map$set("SAL109", "Mbandaka")
strain_serovar_map$set("SAL078", "Schwartzengrund")
strain_serovar_map$set("SAL065", "Uganda")
return(strain_serovar_map)
}
constructColumnHeader <- function(){
col_head = c()
# Haralick Texture - 13 (column 1-13)
for (c in c(1:13)) {
col_head = c(col_head, paste("HT", c, sep = "_"))
}
# PseudoZernike - 230 (column 14-243)
for (c in c(1:230)) {
col_head = c(col_head, paste("PZ", c, sep = "_"))
}
# Experimental (spatial fourier transform) - 257 (column 244-500)
for (c in c(1:257)) {
col_head = c(col_head, paste("SFT", c, sep = "_"))
}
# Max frequency - 256 (column 501-756)
for (c in c(1:256)) {
col_head = c(col_head, paste("MF", c, sep = "_"))
}
# Radial distribution - 362 (column 757-1118)
for (c in c(1:362)) {
col_head = c(col_head, paste("RD", c, sep = "_"))
}
col_head = c(col_head, c("Day", "Serovar", "Strain"))
return(col_head)
}
mapFeatureName <- function(){
feature_name_map = dict()
feature_name_map$set("HT", "Haralick Texture")
feature_name_map$set("PZ", "PseudoZernike")
feature_name_map$set("SFT", "Spatial Fourier Transform")
feature_name_map$set("MF", "Max Frequency")
feature_name_map$set("RD", "Radial Distribution")
return(feature_name_map)
}
#### main
strain_serovar_map = mapStrainToSerovar()
col_name = constructColumnHeader()
ss_salmonella_features = data.frame()
data_folder_path = "C:/Users/sanja/Documents/GitHub/Salmonella/Data/SingleStrain_22Serovar"
data_folder_name = tail(unlist(strsplit(data_folder_path, "/")), 1)
#### iterate over the days
day_folder_names = list.dirs(data_folder_path, recursive=FALSE)
for(day_folder in day_folder_names){
day = tail(unlist(strsplit(day_folder, "/")), 1)
cat("Day: ", day, "\n")
#### iterate over each strain in a day
strain_file_names = list.files(day_folder, full.names = TRUE)
for (strain_file in strain_file_names) {
strain = unlist(strsplit(tail(unlist(strsplit(strain_file, "/")), 1), "\\."))[1]
serovar = strain_serovar_map$get(strain)
cat("Strain: ", strain, ", Serovar: ", serovar, "\n")
#### read the strain file
strain_obv = read.csv(strain_file, header = FALSE)
obv_count = length(strain_obv[, 1])
strain_obv = cbind(strain_obv, rep(day, obv_count), rep(serovar, obv_count), rep(strain, obv_count))
#### combine with the feature object
ss_salmonella_features = rbind(ss_salmonella_features, strain_obv)
}
}
colnames(ss_salmonella_features) = col_name
write.csv(ss_salmonella_features,
file = paste(data_folder_path, data_folder_name, "_Salmonella_Features.csv", sep = ""),
row.names = FALSE)
paste(data_folder_path, data_folder_name, "_Salmonella_Features.csv", sep = "")
colnames(ss_salmonella_features) = col_name
write.csv(ss_salmonella_features,
file = paste(data_folder_path, "/", data_folder_name, "_Salmonella_Features.csv", sep = ""),
row.names = FALSE)
constructColumnHeader <- function(){
col_head = c()
# Haralick Texture - 13 (column 1-13)
for (c in c(1:13)) {
col_head = c(col_head, paste("HT", c, sep = "_"))
}
# PseudoZernike - 230 (column 14-243)
for (c in c(1:230)) {
col_head = c(col_head, paste("PZ", c, sep = "_"))
}
# Experimental (spatial fourier transform) - 257 (column 244-500)
for (c in c(1:257)) {
col_head = c(col_head, paste("SFT", c, sep = "_"))
}
# Max frequency - 256 (column 501-756)
for (c in c(1:256)) {
col_head = c(col_head, paste("MF", c, sep = "_"))
}
# Radial distribution - 362 (column 757-1118)
for (c in c(1:362)) {
col_head = c(col_head, paste("RD", c, sep = "_"))
}
col_head = c(col_head, c("Strain", "Serovar", "SuperClass", "Day"))
return(col_head)
}
#### loading required libraries (there might be more libraries loaded than required)
load_lib = c("deldir", "spatstat", "magrittr", "dplyr", "igraph", "scales", "httr", "tidyverse", "ggnetwork", "ggplot2", "poweRlaw",
"imager", "viridis", "plotrix", "openxlsx", "tidyr", "spdep", "maptools", "tmap", "OpenImageR", "dismo", "lctools",
"officer", "rvg", "truncnorm", "emdist", "ks", "rlist", "readxl", "OneR", "MASS", "RColorBrewer", "this.path",
"causaloptim", "RBGL", "svglite", "ggrepel", "devtools", "geosphere", "collections")
install_lib = load_lib[!load_lib %in% installed.packages()]
for(lib in install_lib) install.packages(lib, dependencies=TRUE)
sapply(load_lib, require, character=TRUE)
mapStrainToSerovar <- function(){
strain_serovar_map = dict()
strain_serovar_map$set("SAL015", "Enteritidis")$set("SAL019", "Enteritidis")$set("SAL026", "Enteritidis")
strain_serovar_map$set("SAL001", "Typhimurium")$set("SAL010", "Typhimurium")$set("SAL031", "Typhimurium")
strain_serovar_map$set("SAL014", "Newport")$set("SAL016", "Newport")$set("SAL103", "Newport")
strain_serovar_map$set("SAL008", "Heidelberg")$set("SAL017", "Heidelberg")$set("SAL142", "Heidelberg")
strain_serovar_map$set("SAL033", "Montevideo")$set("SAL055", "Montevideo")$set("SAL112", "Montevideo")
strain_serovar_map$set("SAL009", "SaintPaul")$set("SAL028", "SaintPaul")
strain_serovar_map$set("SAL007", "Muenchen")$set("SAL043", "Muenchen")$set("SAL058", "Muenchen")
strain_serovar_map$set("SAL170", "Braenderup")$set("SAL176", "Braenderup")
strain_serovar_map$set("SAL002", "Infantis")$set("SAL060", "Infantis")$set("SAL138", "Infantis")
strain_serovar_map$set("SAL025", "Thompson")$set("SAL030", "Thompson")$set("SAL072", "Thompson")
strain_serovar_map$set("SAL049", "Agona")$set("SAL113", "Agona")$set("SAL144", "Agona")
strain_serovar_map$set("SAL021", "Hadar")$set("SAL125", "Hadar")
strain_serovar_map$set("SAL006", "Anatum")
strain_serovar_map$set("SAL064", "Berta")
strain_serovar_map$set("SAL066", "Brandenburg")
strain_serovar_map$set("SAL003", "Kentucky")
strain_serovar_map$set("SAL053", "B:i:-")
strain_serovar_map$set("SAL050", "Dublin")
strain_serovar_map$set("SAL081", "Manhattan")
strain_serovar_map$set("SAL109", "Mbandaka")
strain_serovar_map$set("SAL078", "Schwartzengrund")
strain_serovar_map$set("SAL065", "Uganda")
return(strain_serovar_map)
}
constructColumnHeader <- function(){
col_head = c()
# Haralick Texture - 13 (column 1-13)
for (c in c(1:13)) {
col_head = c(col_head, paste("HT", c, sep = "_"))
}
# PseudoZernike - 230 (column 14-243)
for (c in c(1:230)) {
col_head = c(col_head, paste("PZ", c, sep = "_"))
}
# Experimental (spatial fourier transform) - 257 (column 244-500)
for (c in c(1:257)) {
col_head = c(col_head, paste("SFT", c, sep = "_"))
}
# Max frequency - 256 (column 501-756)
for (c in c(1:256)) {
col_head = c(col_head, paste("MF", c, sep = "_"))
}
# Radial distribution - 362 (column 757-1118)
for (c in c(1:362)) {
col_head = c(col_head, paste("RD", c, sep = "_"))
}
col_head = c(col_head, c("Strain", "Serovar", "SuperClass", "Day"))
return(col_head)
}
mapFeatureName <- function(){
feature_name_map = dict()
feature_name_map$set("HT", "Haralick Texture")
feature_name_map$set("PZ", "PseudoZernike")
feature_name_map$set("SFT", "Spatial Fourier Transform")
feature_name_map$set("MF", "Max Frequency")
feature_name_map$set("RD", "Radial Distribution")
return(feature_name_map)
}
whichSuperClass <- function(serovar){
if(serovar %in% c("Dublin", "Enteritidis", "Newport", "Typhimurium")){
return("DENT")
}else{
return("Non-DENT")
}
}
mergeSingleStrainData <- function(){
strain_serovar_map = mapStrainToSerovar()
col_name = constructColumnHeader()
ss_salmonella_features = data.frame()
data_folder_path = "C:/Users/sanja/Documents/GitHub/Salmonella/Data/SingleStrain_22Serovar"
data_folder_name = tail(unlist(strsplit(data_folder_path, "/")), 1)
#### iterate over the days
day_folder_names = list.dirs(data_folder_path, recursive=FALSE)
for(day_folder in day_folder_names){
day = tail(unlist(strsplit(day_folder, "/")), 1)
cat("Day: ", day, "\n")
#### iterate over each strain in a day
strain_file_names = list.files(day_folder, full.names = TRUE)
for (strain_file in strain_file_names) {
strain = unlist(strsplit(tail(unlist(strsplit(strain_file, "/")), 1), "\\."))[1]
serovar = strain_serovar_map$get(strain)
cat("Strain: ", strain, ", Serovar: ", serovar, "\n")
#### read the strain file
strain_obv = read.csv(strain_file, header = FALSE)
obv_count = length(strain_obv[, 1])
strain_obv = cbind(strain_obv, rep(strain, obv_count), rep(serovar, obv_count),
rep(whichSuperClass(serovar), obv_count), rep(day, obv_count))
#### combine with the feature object
ss_salmonella_features = rbind(ss_salmonella_features, strain_obv)
}
}
colnames(ss_salmonella_features) = col_name
write.csv(ss_salmonella_features,
file = paste(data_folder_path, "/", data_folder_name, "_Salmonella_Features.csv", sep = ""),
row.names = FALSE)
}
#### function call
mergeSingleStrainData()
#### loading required libraries (there might be more libraries loaded than required)
load_lib = c("deldir", "spatstat", "magrittr", "dplyr", "igraph", "scales", "httr", "tidyverse", "ggnetwork", "ggplot2", "poweRlaw",
"imager", "viridis", "plotrix", "openxlsx", "tidyr", "spdep", "maptools", "tmap", "OpenImageR", "dismo", "lctools",
"officer", "rvg", "truncnorm", "emdist", "ks", "rlist", "readxl", "OneR", "MASS", "RColorBrewer", "this.path",
"causaloptim", "RBGL", "svglite", "ggrepel", "devtools", "geosphere", "collections")
install_lib = load_lib[!load_lib %in% installed.packages()]
for(lib in install_lib) install.packages(lib, dependencies=TRUE)
sapply(load_lib, require, character=TRUE)
mapStrainToSerovar <- function(){
strain_serovar_map = dict()
strain_serovar_map$set("SAL015", "Enteritidis")$set("SAL019", "Enteritidis")$set("SAL026", "Enteritidis")
strain_serovar_map$set("SAL001", "Typhimurium")$set("SAL010", "Typhimurium")$set("SAL031", "Typhimurium")
strain_serovar_map$set("SAL014", "Newport")$set("SAL016", "Newport")$set("SAL103", "Newport")
strain_serovar_map$set("SAL008", "Heidelberg")$set("SAL017", "Heidelberg")$set("SAL142", "Heidelberg")
strain_serovar_map$set("SAL033", "Montevideo")$set("SAL055", "Montevideo")$set("SAL112", "Montevideo")
strain_serovar_map$set("SAL009", "SaintPaul")$set("SAL028", "SaintPaul")
strain_serovar_map$set("SAL007", "Muenchen")$set("SAL043", "Muenchen")$set("SAL058", "Muenchen")
strain_serovar_map$set("SAL170", "Braenderup")$set("SAL176", "Braenderup")
strain_serovar_map$set("SAL002", "Infantis")$set("SAL060", "Infantis")$set("SAL138", "Infantis")
strain_serovar_map$set("SAL025", "Thompson")$set("SAL030", "Thompson")$set("SAL072", "Thompson")
strain_serovar_map$set("SAL049", "Agona")$set("SAL113", "Agona")$set("SAL144", "Agona")
strain_serovar_map$set("SAL021", "Hadar")$set("SAL125", "Hadar")
strain_serovar_map$set("SAL006", "Anatum")
strain_serovar_map$set("SAL064", "Berta")
strain_serovar_map$set("SAL066", "Brandenburg")
strain_serovar_map$set("SAL003", "Kentucky")
strain_serovar_map$set("SAL053", "B:i:-")
strain_serovar_map$set("SAL050", "Dublin")
strain_serovar_map$set("SAL081", "Manhattan")
strain_serovar_map$set("SAL109", "Mbandaka")
strain_serovar_map$set("SAL078", "Schwartzengrund")
strain_serovar_map$set("SAL065", "Uganda")
return(strain_serovar_map)
}
constructColumnHeader <- function(){
col_head = c()
# Haralick Texture - 13 (column 1-13)
for (c in c(1:13)) {
col_head = c(col_head, paste("HT", c, sep = "_"))
}
# PseudoZernike - 230 (column 14-243)
for (c in c(1:230)) {
col_head = c(col_head, paste("PZ", c, sep = "_"))
}
# Experimental (spatial fourier transform) - 257 (column 244-500)
for (c in c(1:257)) {
col_head = c(col_head, paste("SFT", c, sep = "_"))
}
# Max frequency - 256 (column 501-756)
for (c in c(1:256)) {
col_head = c(col_head, paste("MF", c, sep = "_"))
}
# Radial distribution - 362 (column 757-1118)
for (c in c(1:362)) {
col_head = c(col_head, paste("RD", c, sep = "_"))
}
col_head = c(col_head, c("Strain", "Serovar", "SuperClass", "Day"))
return(col_head)
}
mapFeatureName <- function(){
feature_name_map = dict()
feature_name_map$set("HT", "Haralick Texture")
feature_name_map$set("PZ", "PseudoZernike")
feature_name_map$set("SFT", "Spatial Fourier Transform")
feature_name_map$set("MF", "Max Frequency")
feature_name_map$set("RD", "Radial Distribution")
return(feature_name_map)
}
whichSuperClass <- function(serovar){
if(serovar %in% c("Dublin", "Enteritidis", "Newport", "Typhimurium")){
return("DENT")
}else{
return("Non-DENT")
}
}
mergeSingleStrainData <- function(){
strain_serovar_map = mapStrainToSerovar()
col_name = constructColumnHeader()
ss_salmonella_features = data.frame()
data_folder_path = "C:/Users/sanja/Documents/GitHub/Salmonella/Data/SingleStrain_22Serovar"
data_folder_name = tail(unlist(strsplit(data_folder_path, "/")), 1)
#### iterate over the days
day_folder_names = list.dirs(data_folder_path, recursive=FALSE)
for(day_folder in day_folder_names){
day = tail(unlist(strsplit(day_folder, "/")), 1)
cat("Day: ", day, "\n")
#### iterate over each strain in a day
strain_file_names = list.files(day_folder, full.names = TRUE)
for (strain_file in strain_file_names) {
strain = unlist(strsplit(tail(unlist(strsplit(strain_file, "/")), 1), "\\."))[1]
serovar = strain_serovar_map$get(strain)
cat("Strain: ", strain, ", Serovar: ", serovar, "\n")
#### read the strain file
strain_obv = read.csv(strain_file, header = FALSE)
obv_count = length(strain_obv[, 1])
strain_obv = cbind(strain_obv, rep(strain, obv_count), rep(serovar, obv_count),
rep(whichSuperClass(serovar), obv_count), rep(day, obv_count))
#### combine with the feature object
ss_salmonella_features = rbind(ss_salmonella_features, strain_obv)
}
}
colnames(ss_salmonella_features) = col_name
write.csv(ss_salmonella_features,
file = paste(data_folder_path, "/", data_folder_name, "_Salmonella_Features.csv", sep = ""),
row.names = FALSE)
}
#### function call
mergeSingleStrainData()
